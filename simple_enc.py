# Decypt Lambda By Aldi Bachtiar rifai
# Makasih 70 subscribe
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))